# Generated by Django 5.1.5 on 2025-07-18 19:09

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('houses', '0004_landlord_alter_house_options_house_amenities_and_more'),
        ('tenants', '0012_remove_payment_house'),
    ]

    operations = [
        migrations.CreateModel(
            name='Charge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charge_type', models.CharField(choices=[('water', 'Water Bill'), ('electricity', 'Electricity Bill'), ('maintenance', 'Maintenance Fee'), ('late_fee', 'Late Payment Fee'), ('cleaning', 'Cleaning Fee'), ('parking', 'Parking Fee'), ('security', 'Security Fee'), ('other', 'Other')], help_text='Type of charge', max_length=50)),
                ('amount', models.PositiveIntegerField(help_text='Charge amount in UGX')),
                ('description', models.TextField(blank=True, help_text='Description of the charge', null=True)),
                ('charge_date', models.DateField(help_text='Date the charge was incurred')),
                ('due_date', models.DateField(blank=True, help_text='Date the charge is due', null=True)),
                ('is_paid', models.BooleanField(default=False, help_text='Whether the charge has been paid')),
                ('paid_date', models.DateField(blank=True, help_text='Date the charge was paid', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('house', models.ForeignKey(help_text='House related to the charge', on_delete=django.db.models.deletion.CASCADE, related_name='charges', to='houses.house')),
            ],
            options={
                'verbose_name': 'Charge',
                'verbose_name_plural': 'Charges',
                'ordering': ['-charge_date'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('lease_agreement', 'Lease Agreement'), ('id_copy', 'ID Copy'), ('passport_photo', 'Passport Photo'), ('employment_letter', 'Employment Letter'), ('bank_statement', 'Bank Statement'), ('reference_letter', 'Reference Letter'), ('inventory_list', 'Inventory List'), ('inspection_report', 'Inspection Report'), ('other', 'Other')], help_text='Type of document', max_length=100)),
                ('title', models.CharField(help_text='Document title', max_length=255)),
                ('file_path', models.FileField(help_text='Path to the uploaded document file', upload_to='documents/')),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('upload_date', models.DateTimeField(auto_now_add=True, help_text='Date the document was uploaded')),
                ('expiry_date', models.DateField(blank=True, help_text='Document expiry date (if applicable)', null=True)),
                ('description', models.TextField(blank=True, help_text='Additional description', null=True)),
                ('is_verified', models.BooleanField(default=False, help_text='Whether the document has been verified')),
                ('verified_by', models.CharField(blank=True, help_text='Who verified the document', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('house', models.ForeignKey(blank=True, help_text='House associated with the document', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents', to='houses.house')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Brief title of the maintenance request', max_length=255)),
                ('description', models.TextField(help_text='Detailed description of the issue')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', help_text='Priority level of the request', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', help_text='Current status of the request', max_length=50)),
                ('request_date', models.DateTimeField(auto_now_add=True, help_text='Date the request was made')),
                ('scheduled_date', models.DateTimeField(blank=True, help_text='Scheduled date for maintenance', null=True)),
                ('completion_date', models.DateTimeField(blank=True, help_text='Date the maintenance was completed', null=True)),
                ('estimated_cost', models.PositiveIntegerField(blank=True, help_text='Estimated cost of maintenance', null=True)),
                ('actual_cost', models.PositiveIntegerField(blank=True, help_text='Actual cost of maintenance', null=True)),
                ('contractor', models.CharField(blank=True, help_text='Contractor assigned to the job', max_length=255, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('house', models.ForeignKey(help_text='House requiring maintenance', on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_requests', to='houses.house')),
            ],
            options={
                'verbose_name': 'Maintenance Request',
                'verbose_name_plural': 'Maintenance Requests',
                'ordering': ['-request_date'],
            },
        ),
        migrations.DeleteModel(
            name='House',
        ),
        migrations.AlterModelOptions(
            name='payment',
            options={'ordering': ['-payment_date'], 'verbose_name': 'Payment', 'verbose_name_plural': 'Payments'},
        ),
        migrations.AlterModelOptions(
            name='tenant',
            options={'ordering': ['name'], 'verbose_name': 'Tenant', 'verbose_name_plural': 'Tenants'},
        ),
        migrations.RemoveField(
            model_name='payment',
            name='period',
        ),
        migrations.AddField(
            model_name='payment',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='payment',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional notes about the payment', null=True),
        ),
        migrations.AddField(
            model_name='payment',
            name='payment_end_date',
            field=models.DateField(default=datetime.datetime(2025, 7, 18, 19, 7, 2, 362775, tzinfo=datetime.timezone.utc), help_text='End date of rent period'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='payment',
            name='payment_method',
            field=models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('mobile_money', 'Mobile Money'), ('cheque', 'Cheque'), ('card', 'Card')], default='cash', help_text='Method of payment', max_length=20),
        ),
        migrations.AddField(
            model_name='payment',
            name='payment_start_date',
            field=models.DateField(default=datetime.datetime(2025, 7, 18, 19, 7, 17, 997991, tzinfo=datetime.timezone.utc), help_text='Start date of rent period'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='payment',
            name='reference_number',
            field=models.CharField(blank=True, help_text='Payment reference number', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='payment',
            name='rent_amount_due',
            field=models.PositiveIntegerField(default=0, help_text='Rent amount due for the period'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='payment',
            name='rent_due_date',
            field=models.DateField(default=datetime.datetime(2025, 7, 18, 19, 9, 32, 583160, tzinfo=datetime.timezone.utc), help_text='Date rent was due'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='payment',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='tenant',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=datetime.datetime(2025, 7, 18, 19, 9, 49, 51064, tzinfo=datetime.timezone.utc)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='tenant',
            name='emergency_contact_name',
            field=models.CharField(blank=True, help_text='Emergency contact person', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='tenant',
            name='emergency_contact_phone',
            field=models.CharField(blank=True, help_text='Emergency contact phone number', max_length=15, null=True),
        ),
        migrations.AddField(
            model_name='tenant',
            name='employer',
            field=models.CharField(blank=True, help_text="Tenant's employer", max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='tenant',
            name='lease_end_date',
            field=models.DateField(blank=True, help_text='End date of the lease', null=True),
        ),
        migrations.AddField(
            model_name='tenant',
            name='lease_start_date',
            field=models.DateField(blank=True, help_text='Start date of the lease', null=True),
        ),
        migrations.AddField(
            model_name='tenant',
            name='monthly_income',
            field=models.PositiveIntegerField(blank=True, help_text='Monthly income in UGX', null=True),
        ),
        migrations.AddField(
            model_name='tenant',
            name='occupation',
            field=models.CharField(blank=True, help_text="Tenant's occupation", max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='tenant',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('evicted', 'Evicted'), ('moved_out', 'Moved Out')], default='active', help_text='Current status of the tenant', max_length=50),
        ),
        migrations.AddField(
            model_name='tenant',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='payment',
            name='amount_paid',
            field=models.PositiveIntegerField(help_text='Amount paid in UGX'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='balance_due',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Remaining balance after payment'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='overpayment',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Amount overpaid (credit)'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='payment_date',
            field=models.DateField(auto_now_add=True, help_text='Date payment was made'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='tenant',
            field=models.ForeignKey(help_text='Tenant who made the payment', on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='tenants.tenant'),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='email',
            field=models.EmailField(help_text='Email address for communication', max_length=254),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='house',
            field=models.ForeignKey(blank=True, help_text='Currently rented house', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tenants', to='houses.house'),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='name',
            field=models.CharField(help_text='Full name of the tenant', max_length=255),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='national_id',
            field=models.CharField(help_text='National identification number', max_length=20, unique=True),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='phone',
            field=models.CharField(help_text='Contact phone number', max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')]),
        ),
        migrations.AddField(
            model_name='charge',
            name='tenant',
            field=models.ForeignKey(help_text='Tenant responsible for the charge', on_delete=django.db.models.deletion.CASCADE, related_name='charges', to='tenants.tenant'),
        ),
        migrations.AddField(
            model_name='document',
            name='tenant',
            field=models.ForeignKey(blank=True, help_text='Tenant associated with the document', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents', to='tenants.tenant'),
        ),
        migrations.AddField(
            model_name='maintenancerequest',
            name='tenant',
            field=models.ForeignKey(help_text='Tenant who made the request', on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_requests', to='tenants.tenant'),
        ),
    ]
