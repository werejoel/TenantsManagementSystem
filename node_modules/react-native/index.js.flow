/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 * @flow strict-local
 */

// ----------------------------------------------------------------------------
// Types entry point for react-native.
//
// Exports of this module define the public API for React Native at development
// time, and are automatically translated to TypeScript when we publish to npm.
//
// IMPORTANT: Keep this file in sync with index.js. Test your changes whenever
// updating React Native's public API.
// ----------------------------------------------------------------------------

/// <reference path="../src/types/globals.d.ts" />

// #region Components

export type {ActivityIndicatorProps} from './Libraries/Components/ActivityIndicator/ActivityIndicator';
export {default as ActivityIndicator} from './Libraries/Components/ActivityIndicator/ActivityIndicator';

export type {ButtonProps} from './Libraries/Components/Button';
export {default as Button} from './Libraries/Components/Button';

export type {
  DrawerLayoutAndroidProps,
  DrawerSlideEvent,
} from './Libraries/Components/DrawerAndroid/DrawerLayoutAndroid';
export {default as DrawerLayoutAndroid} from './Libraries/Components/DrawerAndroid/DrawerLayoutAndroid';

export type {FlatListProps} from './Libraries/Lists/FlatList';
export {default as FlatList} from './Libraries/Lists/FlatList';

export type {
  ImageBackgroundProps,
  ImageErrorEvent,
  ImageLoadEvent,
  ImageProgressEventIOS,
  ImageProps,
  ImagePropsAndroid,
  ImagePropsBase,
  ImagePropsIOS,
  ImageResolvedAssetSource,
  ImageSize,
  ImageSourcePropType,
} from './Libraries/Image/Image';
export type {
  ImageRequireSource,
  ImageSource,
  ImageURISource,
} from './Libraries/Image/ImageSource';
export {default as Image} from './Libraries/Image/Image';
export {default as ImageBackground} from './Libraries/Image/ImageBackground';

export type {InputAccessoryViewProps} from './Libraries/Components/TextInput/InputAccessoryView';
export {default as InputAccessoryView} from './Libraries/Components/TextInput/InputAccessoryView';

export type {KeyboardAvoidingViewProps} from './Libraries/Components/Keyboard/KeyboardAvoidingView';
export {default as KeyboardAvoidingView} from './Libraries/Components/Keyboard/KeyboardAvoidingView';

export type {LayoutConformanceProps} from './Libraries/Components/LayoutConformance/LayoutConformance';
export {default as experimental_LayoutConformance} from './Libraries/Components/LayoutConformance/LayoutConformance';

export type {
  ModalBaseProps,
  ModalProps,
  ModalPropsAndroid,
  ModalPropsIOS,
} from './Libraries/Modal/Modal';
export {default as Modal} from './Libraries/Modal/Modal';

export type {
  PressableAndroidRippleConfig,
  PressableProps,
  PressableStateCallbackType,
} from './Libraries/Components/Pressable/Pressable';
export {default as Pressable} from './Libraries/Components/Pressable/Pressable';

export type {ProgressBarAndroidProps} from './Libraries/Components/ProgressBarAndroid/ProgressBarAndroid';
export {default as ProgressBarAndroid} from './Libraries/Components/ProgressBarAndroid/ProgressBarAndroid';

export type {
  RefreshControlProps,
  RefreshControlPropsAndroid,
  RefreshControlPropsIOS,
} from './Libraries/Components/RefreshControl/RefreshControl';
export {default as RefreshControl} from './Libraries/Components/RefreshControl/RefreshControl';

export {default as SafeAreaView} from './Libraries/Components/SafeAreaView/SafeAreaView';

export type {
  ScrollResponderType,
  ScrollViewProps,
  ScrollViewPropsAndroid,
  ScrollViewPropsIOS,
} from './Libraries/Components/ScrollView/ScrollView';
export {default as ScrollView} from './Libraries/Components/ScrollView/ScrollView';

export type {
  SectionListProps,
  SectionListRenderItem,
  SectionListRenderItemInfo,
  SectionListData,
} from './Libraries/Lists/SectionList';
export {default as SectionList} from './Libraries/Lists/SectionList';

export type {
  StatusBarAnimation,
  StatusBarProps,
  StatusBarStyle,
} from './Libraries/Components/StatusBar/StatusBar';
export {default as StatusBar} from './Libraries/Components/StatusBar/StatusBar';

export type {
  SwitchChangeEvent,
  SwitchProps,
} from './Libraries/Components/Switch/Switch';
export {default as Switch} from './Libraries/Components/Switch/Switch';

export type {TextProps} from './Libraries/Text/Text';
export {default as Text} from './Libraries/Text/Text';

export type {
  AutoCapitalize,
  EnterKeyHintTypeOptions,
  KeyboardTypeOptions,
  InputModeOptions,
  TextContentType,
  TextInputAndroidProps,
  TextInputIOSProps,
  TextInputProps,
  TextInputChangeEvent,
  TextInputContentSizeChangeEvent,
  TextInputEndEditingEvent,
  TextInputFocusEvent,
  TextInputKeyPressEvent,
  TextInputSelectionChangeEvent,
  TextInputSubmitEditingEvent,
  ReturnKeyTypeOptions,
  SubmitBehavior,
} from './Libraries/Components/TextInput/TextInput';
export {default as TextInput} from './Libraries/Components/TextInput/TextInput';

export {default as Touchable} from './Libraries/Components/Touchable/Touchable';

export type {TouchableHighlightProps} from './Libraries/Components/Touchable/TouchableHighlight';
export {default as TouchableHighlight} from './Libraries/Components/Touchable/TouchableHighlight';

export type {TouchableNativeFeedbackProps} from './Libraries/Components/Touchable/TouchableNativeFeedback';
export {default as TouchableNativeFeedback} from './Libraries/Components/Touchable/TouchableNativeFeedback';

export type {TouchableOpacityProps} from './Libraries/Components/Touchable/TouchableOpacity';
export {default as TouchableOpacity} from './Libraries/Components/Touchable/TouchableOpacity';

export type {TouchableWithoutFeedbackProps} from './Libraries/Components/Touchable/TouchableWithoutFeedback';
export {default as TouchableWithoutFeedback} from './Libraries/Components/Touchable/TouchableWithoutFeedback';

export type {
  AccessibilityActionEvent,
  AccessibilityProps,
  AccessibilityRole,
  AccessibilityState,
  AccessibilityValue,
  Role,
} from './Libraries/Components/View/ViewAccessibility';
export type {
  GestureResponderHandlers,
  TVViewPropsIOS,
  ViewProps,
  ViewPropsAndroid,
  ViewPropsIOS,
} from './Libraries/Components/View/ViewPropTypes';
export {default as View} from './Libraries/Components/View/View';

export type {
  ListRenderItemInfo,
  ListRenderItem,
  Separators,
  VirtualizedListProps,
} from './Libraries/Lists/VirtualizedList';
export {default as VirtualizedList} from './Libraries/Lists/VirtualizedList';

export type {
  ScrollToLocationParamsType,
  SectionBase,
  VirtualizedSectionListProps,
} from './Libraries/Lists/VirtualizedSectionList';
export {default as VirtualizedSectionList} from './Libraries/Lists/VirtualizedSectionList';

// #endregion
// #region APIs

export {default as AccessibilityInfo} from './Libraries/Components/AccessibilityInfo/AccessibilityInfo';

export type {
  ActionSheetIOSOptions,
  ShareActionSheetIOSOptions,
  ShareActionSheetError,
} from './Libraries/ActionSheetIOS/ActionSheetIOS';
export {default as ActionSheetIOS} from './Libraries/ActionSheetIOS/ActionS